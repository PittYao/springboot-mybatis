<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.mybatis.mybatis.dao.UserDao">
    <!--auto generated Code-->
    <resultMap id="BaseResultMap" type="com.mybatis.mybatis.domain.User">
        <result column="id" property="id" jdbcType="VARCHAR"/>
        <result column="name" property="name" jdbcType="VARCHAR"/>
        <result column="password" property="password" jdbcType="VARCHAR"/>
    </resultMap>

    <!--one2one 联合查询-->
    <resultMap id="queryList" type="com.mybatis.mybatis.domain.User">
        <result column="id" property="id" jdbcType="VARCHAR"/>
        <result column="name" property="name" jdbcType="VARCHAR"/>
        <result column="password" property="password" jdbcType="VARCHAR"/>
        <!--联合查询 用一条语句查询所有数据-->
        <association property="teacher" javaType="com.mybatis.mybatis.domain.Teacher">
            <id property="id" column="t_id"/>
            <result property="name" column="t_name"/>
        </association>
    </resultMap>

    <select id="findById" parameterType="int" resultMap="queryList">
      SELECT u.id,u.name,u.password,t.id t_id,t.name t_name
      from user u left join teacher t
      on u.teacher_id = t.id where u.id =#{id}
    </select>

   <!-- &lt;!&ndash;one2one 嵌套查询&ndash;&gt;
    <select id="findById" parameterType="int" resultMap="queryList">
      SELECT id,name,password,teacher_id  FROM user WHERE  user.id = #{id}
    </select>
    &lt;!&ndash;用其他mapper的xml来查询&ndash;&gt;
    <resultMap id="queryList" type="User">
        <id property="id" column="id"/>
        <result property="name" column="name"/>
        <result property="password" column="password"/>
        &lt;!&ndash; 用其他mapper的namespace加id&ndash;&gt;
        <association property="teacher" column="teacher_id" select="com.mybatis.mybatis.dao.TeacherDao.findById"/>
    </resultMap>
-->
    <!--auto generated Code-->
    <sql id="Base_Column_List">>
        id,
        name
    </sql>

    <!--auto generated Code-->
    <insert id="insert" useGeneratedKeys="true" keyProperty="user.id">
        INSERT INTO user (
            id,
            name
        ) VALUES (
            #{user.id,jdbcType=VARCHAR},
            #{user.name,jdbcType=VARCHAR}
        )
    </insert>

    <!--auto generated Code-->
    <insert id="insertSelective" useGeneratedKeys="true" keyProperty="user.id">
        INSERT INTO user
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="user.id!=null">id,</if>
            <if test="user.name!=null">name,</if>
        </trim>
        VALUES
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="user.id!=null">#{user.id,jdbcType=VARCHAR},
            </if>
            <if test="user.name!=null">#{user.name,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>

    <!--auto generated Code-->
    <insert id="insertList">
        INSERT INTO user (
        id,
        name
        )VALUES
        <foreach collection="users" item="user" index="index" separator=",">
            (
            #{user.id,jdbcType=VARCHAR},
            #{user.name,jdbcType=VARCHAR}
            )
        </foreach>
    </insert>

    <!--auto generated Code-->
    <update id="update">
        UPDATE user
        <set>
            <if test="user.id != null">id= #{user.id,jdbcType=VARCHAR},</if>
            <if test="user.name != null">name= #{user.name,jdbcType=VARCHAR}</if>
        </set>
        WHERE id = #{user.id,jdbcType=VARCHAR}
    </update>


</mapper>

